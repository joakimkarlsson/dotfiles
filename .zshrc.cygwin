# vim:foldmethod=marker
#
# Cygwin (i.e. work) specific setup. Source from ~/.zshrc
#

# {{{ LIME Stuff

function glp() {
    # gulp replacement for running gulp inside node_modules
    #
    if [[ (-d "$PWD/node_modules") && (-d "$PWD/node_modules/gulp") ]]; then
        winpty node node_modules/gulp/bin/gulp.js $*
    else
        echo "Cannot find a node_modules or a gulp directory!"
    fi
}

alias lisa='winpty.exe /cygdrive/c/src/limeworld/serveradmin/Server/Lundalogik.Lisa.Service.ConsoleHost/bin/Debug/LisaConsole.exe'
# }}}

# {{{ Aliases to make some native windows applications play nice with
# a standard terminal. Uses https://github.com/rprichard/winpty
alias lf='winpty.exe limefu'
alias node="winpty.exe node"
alias devpi="winpty.exe devpi"
alias vagrant="winpty.exe vagrant"
alias wpy="winpty.exe python"
alias py.test="winpty.exe py.test.exe"
# }}}

function ipy() {
    VIRTUAL_ENV=$(cygpath -w $VIRTUAL_ENV) EDITOR=$(cygpath -w /usr/bin/vim) winpty.exe ipython3
}

function manage.py() {
    VIRTUAL_ENV=$(cygpath -w $VIRTUAL_ENV) winpty.exe python manage.py $*
}

function startdocker() {
    pushd "/cygdrive/c/Program Files/Docker Toolbox/"
    ./startcyg.sh
    eval "$(docker-machine env default)"
    popd
}

# Set up a new virtual env for Python 3.4
function venv34() {
    [[ -d venv ]] && rm -rf venv

    winpty /cygdrive/c/Python34/Scripts/virtualenv venv && av && winpty python -m pip install -U pip
}


# {{{ LIME specific stuff
alias sup="pushd ~/src/limetng && winpty cmd /c setup.bat; popd"
# }}}

# {{{ Aliases
#
# Kill a native window process from cygwin terminal
alias killw='taskkill /F /PID'
alias killall='taskkill /F /T /IM'

# Standard shell shortcuts
alias ll='ls -l --color'
alias la='ls -lA --color'

alias open='cygstart'

# }}}
