#
# Use tmuxline for statusbar
# Generated from vims tmuxline via :TmuxlineSnapshot
#
# source ~/.tmuxline.conf

#
# Makes sure that 'tmux <cmd> -c <workdir>' works
#
set-environment -g CHERE_INVOKING 1

set-option -g default-shell $SHELL

#
# Move like vim
#
set-window-option -g mode-keys vi

#
# A prefix key that's easier to reach
#
unbind C-b
set -g prefix C-Space
bind Space last-window
bind C-Space switch-client -l

#
# Quickly reload .tmux.conf
#
# bind r source-file ~/.tmux.conf; display "Reloaded!"

#
# Enable true colors
#
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g default-terminal "tmux"

#
# Status bar
#

set -g status-left " #S "
set -g status-left-length 25
set -g status-right ""

set-option -g status-justify centre

# Status bar colors
set -g status-bg default
set-option -g status-fg white
set-window-option -g window-status-bg colour240
set-window-option -g window-status-fg white
set-window-option -g window-status-current-bg colour41
set-window-option -g window-status-current-fg black
set-window-option -g window-status-separator '  '

# Set window/pane colors and add "padding" around panes and windows
# setw -g window-style 'bg=#262626'
# setw -g window-active-style 'bg=#121212'
set-option -g pane-active-border-style 'bg=#3a3a3a'
set-option -ag pane-active-border-style 'bg=#3a3a3a'
set-option -g pane-active-border-fg colour237
set-option -g pane-border-fg colour237
setw -g pane-border-status bottom

#
# Splitting windows
#
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


#
# Use vim-like bindings to highligt and yank text in copy mode.
#
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

#
# Fuzzy search for session
#
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"


set -g @plugin 'tmux-plugins/tpm'

# This plugin enables:
# - regex searches
# - search result highlighting
# - predefined searches
set -g @plugin 'tmux-plugins/tmux-copycat'

# copycat binding for finding docker ids
set -g @copycat_search_M-d '[[:alnum:]]{12,}'

# Copy to the system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
