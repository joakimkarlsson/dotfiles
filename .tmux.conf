#
# Use tmuxline for statusbar
# Generated from vims tmuxline via :TmuxlineSnapshot
#
source ~/.tmuxline.conf

#
# Makes sure that 'tmux <cmd> -c <workdir>' works
#
set-environment -g CHERE_INVOKING 1

#
# Move like vim
#
set-window-option -g mode-keys vi

#
# A prefix key that's easier to reach
#
unbind C-b
set -g prefix C-Space
bind Space last-window
bind C-Space switch-client -l

#
# Quickly reload .tmux.conf
#
# bind r source-file ~/.tmux.conf; display "Reloaded!"

#
# Enable true colors
#
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g default-terminal "tmux"

#
# Splitting windows
#
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

#
# Smart pane switching with awareness of vim splits
#
bind-key "h" select-pane -L
bind-key "j" select-pane -D
bind-key "k" select-pane -U
bind-key "l" select-pane -R

# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#
# Use vim-like bindings to highligt and yank text in copy mode.
#
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

#
# Fuzzy search for session
#
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
